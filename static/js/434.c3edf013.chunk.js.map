{"version":3,"file":"static/js/434.c3edf013.chunk.js","mappings":"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","sources":["../node_modules/react-tsparticles/esm/Utils.js","../node_modules/react-tsparticles/esm/Particles.js","../node_modules/react-tsparticles/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/Core/Engine.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-engine/esm/init.js","../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSizeLimit.js","../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSize.js","../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js","../node_modules/tsparticles-plugin-absorbers/esm/AbsorberInstance.js","../node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js","../node_modules/tsparticles-plugin-absorbers/esm/index.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/Split.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/Destroy.js","../node_modules/tsparticles-updater-destroy/esm/Utils.js","../node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js","../node_modules/tsparticles-updater-destroy/esm/index.js","../node_modules/tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterLife.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterRate.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js","../node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js","../node_modules/tsparticles-plugin-emitters/esm/Emitters.js","../node_modules/tsparticles-plugin-emitters/esm/ShapeManager.js","../node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js","../node_modules/tsparticles-plugin-emitters/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","../node_modules/tsparticles-interaction-external-trail/esm/Options/Classes/Trail.js","../node_modules/tsparticles-interaction-external-trail/esm/TrailMaker.js","../node_modules/tsparticles-interaction-external-trail/esm/index.js","../node_modules/tsparticles-updater-roll/esm/Options/Classes/RollLight.js","../node_modules/tsparticles-updater-roll/esm/Options/Classes/Roll.js","../node_modules/tsparticles-updater-roll/esm/RollUpdater.js","../node_modules/tsparticles-updater-roll/esm/Utils.js","../node_modules/tsparticles-updater-roll/esm/index.js","../node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","../node_modules/tsparticles-particles.js/esm/index.js","../node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","../node_modules/tsparticles-move-base/esm/Utils.js","../node_modules/tsparticles-move-base/esm/BaseMover.js","../node_modules/tsparticles-move-base/esm/index.js","../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","../node_modules/tsparticles-shape-circle/esm/index.js","../node_modules/tsparticles-updater-color/esm/Utils.js","../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","../node_modules/tsparticles-updater-color/esm/index.js","../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","../node_modules/tsparticles-updater-opacity/esm/Utils.js","../node_modules/tsparticles-updater-opacity/esm/index.js","../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","../node_modules/tsparticles-updater-out-modes/esm/index.js","../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","../node_modules/tsparticles-updater-size/esm/Utils.js","../node_modules/tsparticles-updater-size/esm/index.js","../node_modules/tsparticles-basic/esm/index.js","../node_modules/tsparticles-plugin-easing-quad/esm/index.js","../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-external-attract/esm/index.js","../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","../node_modules/tsparticles-interaction-external-bounce/esm/index.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","../node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","../node_modules/tsparticles-interaction-external-bubble/esm/index.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","../node_modules/tsparticles-interaction-external-connect/esm/Utils.js","../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","../node_modules/tsparticles-interaction-external-connect/esm/index.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","../node_modules/tsparticles-interaction-external-grab/esm/Utils.js","../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","../node_modules/tsparticles-interaction-external-grab/esm/index.js","../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","../node_modules/tsparticles-interaction-external-pause/esm/index.js","../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","../node_modules/tsparticles-interaction-external-push/esm/index.js","../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","../node_modules/tsparticles-interaction-external-remove/esm/index.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","../node_modules/tsparticles-interaction-external-repulse/esm/index.js","../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","../node_modules/tsparticles-interaction-external-slow/esm/index.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","../node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","../node_modules/tsparticles-shape-image/esm/Utils.js","../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","../node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","../node_modules/tsparticles-shape-image/esm/ImagePreloader.js","../node_modules/tsparticles-shape-image/esm/index.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","../node_modules/tsparticles-updater-life/esm/index.js","../node_modules/tsparticles-shape-line/esm/LineDrawer.js","../node_modules/tsparticles-shape-line/esm/index.js","../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","../node_modules/tsparticles-move-parallax/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-particles-attract/esm/index.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","../node_modules/tsparticles-interaction-particles-links/esm/index.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","../node_modules/tsparticles-shape-polygon/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","../node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","../node_modules/tsparticles-updater-rotate/esm/index.js","../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","../node_modules/tsparticles-shape-square/esm/index.js","../node_modules/tsparticles-shape-star/esm/StarDrawer.js","../node_modules/tsparticles-shape-star/esm/index.js","../node_modules/tsparticles-updater-stroke-color/esm/Utils.js","../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","../node_modules/tsparticles-updater-stroke-color/esm/index.js","../node_modules/tsparticles-shape-text/esm/TextDrawer.js","../node_modules/tsparticles-shape-text/esm/index.js","../node_modules/tsparticles-slim/esm/index.js","../node_modules/tsparticles-updater-tilt/esm/Options/Classes/TiltAnimation.js","../node_modules/tsparticles-updater-tilt/esm/Options/Classes/Tilt.js","../node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js","../node_modules/tsparticles-updater-tilt/esm/Utils.js","../node_modules/tsparticles-updater-tilt/esm/index.js","../node_modules/tsparticles-updater-twinkle/esm/Options/Classes/TwinkleValues.js","../node_modules/tsparticles-updater-twinkle/esm/Options/Classes/Twinkle.js","../node_modules/tsparticles-updater-twinkle/esm/TwinkleUpdater.js","../node_modules/tsparticles-updater-twinkle/esm/index.js","../node_modules/tsparticles-updater-wobble/esm/Options/Classes/WobbleSpeed.js","../node_modules/tsparticles-updater-wobble/esm/Options/Classes/Wobble.js","../node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js","../node_modules/tsparticles-updater-wobble/esm/Utils.js","../node_modules/tsparticles-updater-wobble/esm/index.js","../node_modules/tsparticles/esm/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ValueWithRandom, isNumber } from \"tsparticles-engine\";\nimport { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (isNumber(data.limit)) {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nimport { AbsorberSize } from \"./AbsorberSize\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        this.absorbers = absorbers;\n        this.container = container;\n        this._calcPosition = () => {\n            const exactPosition = calcPositionOrRandomFromSizeRanged({\n                size: this.container.canvas.size,\n                position: this.options.position,\n            });\n            return Vector.create(exactPosition.x, exactPosition.y);\n        };\n        this._updateParticlePosition = (particle, v) => {\n            if (particle.destroyed) {\n                return;\n            }\n            const container = this.container, canvasSize = container.canvas.size;\n            if (particle.needsNewPosition) {\n                const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n                particle.position.setTo(newPosition);\n                particle.velocity.setTo(particle.initialVelocity);\n                particle.absorberOrbit = undefined;\n                particle.needsNewPosition = false;\n            }\n            if (this.options.orbits) {\n                if (particle.absorberOrbit === undefined) {\n                    particle.absorberOrbit = Vector.create(0, 0);\n                    particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                    particle.absorberOrbit.angle = getRandom() * Math.PI * 2;\n                }\n                if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                    const minSize = Math.min(canvasSize.width, canvasSize.height);\n                    particle.absorberOrbit.length = minSize * (1 + (getRandom() * 0.2 - 0.1));\n                }\n                if (particle.absorberOrbitDirection === undefined) {\n                    particle.absorberOrbitDirection =\n                        particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n                }\n                const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n                particle.velocity.setTo(Vector.origin);\n                const updateFunc = {\n                    x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                    y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n                };\n                particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n                particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n                particle.absorberOrbit.length -= v.length;\n                particle.absorberOrbit.angle +=\n                    (((particle.retina.moveSpeed ?? 0) * container.retina.pixelRatio) / 100) *\n                        container.retina.reduceFactor;\n            }\n            else {\n                const addV = Vector.origin;\n                addV.length = v.length;\n                addV.angle = v.angle;\n                particle.velocity.addTo(addV);\n            }\n        };\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = rangeColorToRgb(this.options.color) ?? {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = this.initialPosition?.copy() ?? this._calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this._updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this._updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this._updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n    }\n}\n","import { executeOnSingleOrMultiple, isNumber, itemFromSingleOrMultiple, } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions ?? itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple(source?.interactivity?.modes?.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (isArray(absorbers)) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (options.interactivity?.events?.onClick?.mode &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine, refresh = true) {\n    await engine.addPlugin(new AbsorbersPlugin(), refresh);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n","import { OptionsColor, deepExtend, executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { SplitFactor } from \"./SplitFactor\";\nimport { SplitRate } from \"./SplitRate\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n        if (data.colorOffset) {\n            this.colorOffset = this.colorOffset ?? {};\n            if (data.colorOffset.h !== undefined) {\n                this.colorOffset.h = data.colorOffset.h;\n            }\n            if (data.colorOffset.s !== undefined) {\n                this.colorOffset.s = data.colorOffset.s;\n            }\n            if (data.colorOffset.l !== undefined) {\n                this.colorOffset.l = data.colorOffset.l;\n            }\n        }\n    }\n}\n","import { DestroyBounds } from \"./DestroyBounds\";\nimport { Split } from \"./Split\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = \"none\";\n        this.split = new Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n","import { getRangeValue, getValue, isNumber, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nfunction addSplitParticle(engine, container, parent, splitParticlesOptions) {\n    const destroyOptions = parent.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split, options = loadParticlesOptions(engine, container, parent.options), factor = getValue(splitOptions.factor), parentColor = parent.getFillColor();\n    if (splitOptions.color) {\n        options.color.load(splitOptions.color);\n    }\n    else if (splitOptions.colorOffset && parentColor) {\n        options.color.load({\n            value: {\n                hsl: {\n                    h: parentColor.h + getRangeValue(splitOptions.colorOffset.h ?? 0),\n                    s: parentColor.s + getRangeValue(splitOptions.colorOffset.s ?? 0),\n                    l: parentColor.l + getRangeValue(splitOptions.colorOffset.l ?? 0),\n                },\n            },\n        });\n    }\n    else {\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n    }\n    options.move.load({\n        center: {\n            x: parent.position.x,\n            y: parent.position.y,\n            mode: \"precise\",\n        },\n    });\n    if (isNumber(options.size.value)) {\n        options.size.value /= factor;\n    }\n    else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n    }\n    options.load(splitParticlesOptions);\n    const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n        x: parent.position.x + randomInRange(offset),\n        y: parent.position.y + randomInRange(offset),\n    };\n    return container.particles.addParticle(position, options, parent.group, (particle) => {\n        if (particle.size.value < 0.5) {\n            return false;\n        }\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = (parent.splitCount ?? 0) + 1;\n        particle.unbreakable = true;\n        setTimeout(() => {\n            particle.unbreakable = false;\n        }, 500);\n        return true;\n    });\n}\nexport function split(engine, container, particle) {\n    const destroyOptions = particle.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split;\n    if (splitOptions.count >= 0 && (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n        return;\n    }\n    const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n    for (let i = 0; i < rate; i++) {\n        addSplitParticle(engine, container, particle, particlesSplitOptions);\n    }\n}\n","import { getRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nimport { split } from \"./Utils\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBoundsOptions = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        const { bottom, left, right, top } = destroyBoundsOptions, { destroyBounds } = particle, canvasSize = container.canvas.size;\n        if (bottom) {\n            destroyBounds.bottom = (getRangeValue(bottom) * canvasSize.height) / 100;\n        }\n        if (left) {\n            destroyBounds.left = (getRangeValue(left) * canvasSize.width) / 100;\n        }\n        if (right) {\n            destroyBounds.right = (getRangeValue(right) * canvasSize.width) / 100;\n        }\n        if (top) {\n            destroyBounds.top = (getRangeValue(top) * canvasSize.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source?.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            split(this.engine, this.container, particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n}\n","import { DestroyUpdater } from \"./DestroyUpdater\";\nexport async function loadDestroyUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"destroy\", (container) => new DestroyUpdater(engine, container), refresh);\n}\n","import { getRandom } from \"tsparticles-engine\";\nexport class CircleShape {\n    randomPosition(position, size, fill) {\n        const generateTheta = (x, y) => {\n            const u = getRandom() / 4.0, theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u)), v = getRandom();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [size.width / 2, size.height / 2], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            x: position.x + randomRadius * Math.cos(randomTheta),\n            y: position.y + randomRadius * Math.sin(randomTheta),\n        };\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n","export class EmitterSize {\n    constructor() {\n        this.mode = \"percent\";\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, setRangeValue, } from \"tsparticles-engine\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = \"square\";\n        this.startCount = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (!this.size) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        if (data.shape !== undefined) {\n            this.shape = data.shape;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, getSize, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        this.emitters = emitters;\n        this.container = container;\n        this._calcPosition = () => {\n            return calcPositionOrRandomFromSizeRanged({\n                size: this.container.canvas.size,\n                position: this.options.position,\n            });\n        };\n        this._destroy = () => {\n            this.emitters.removeEmitter(this);\n            this._engine.dispatchEvent(\"emitterDestroyed\", {\n                container: this.container,\n                data: {\n                    emitter: this,\n                },\n            });\n        };\n        this._emit = () => {\n            if (this._paused) {\n                return;\n            }\n            const quantity = getRangeValue(this.options.rate.quantity);\n            this._emitParticles(quantity);\n        };\n        this._emitParticles = (quantity) => {\n            const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n            for (let i = 0; i < quantity; i++) {\n                const particlesOptions = deepExtend({}, singleParticlesOptions);\n                if (this.spawnColor) {\n                    const hslAnimation = this.options.spawnColor?.animation;\n                    if (hslAnimation) {\n                        this.spawnColor.h = this._setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                        this.spawnColor.s = this._setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                        this.spawnColor.l = this._setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                    }\n                    if (!particlesOptions.color) {\n                        particlesOptions.color = {\n                            value: this.spawnColor,\n                        };\n                    }\n                    else {\n                        particlesOptions.color.value = this.spawnColor;\n                    }\n                }\n                if (!position) {\n                    return;\n                }\n                const pPosition = this._shape?.randomPosition(position, size, this.fill) ?? position;\n                this.container.particles.addParticle(pPosition, particlesOptions);\n            }\n        };\n        this._prepareToDie = () => {\n            if (this._paused) {\n                return;\n            }\n            const duration = this.options.life?.duration !== undefined ? getRangeValue(this.options.life.duration) : undefined;\n            if (this.container.retina.reduceFactor &&\n                (this._lifeCount > 0 || this._immortal) &&\n                duration !== undefined &&\n                duration > 0) {\n                this._duration = duration * 1000;\n            }\n        };\n        this._setColorAnimation = (animation, initValue, maxValue) => {\n            const container = this.container;\n            if (!animation.enable) {\n                return initValue;\n            }\n            const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue(animation.speed ?? 0);\n            return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n        };\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (getRangeValue(this.options.life.delay ?? 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = this._initialPosition ?? this._calcPosition();\n        this.name = this.options.name;\n        this._shape = this._engine.emitterShapeManager?.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions ??= {};\n        particlesOptions.move ??= {};\n        particlesOptions.move.direction ??= this.options.direction;\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            this.options.size ??\n                (() => {\n                    const size = new EmitterSize();\n                    size.load({\n                        height: 0,\n                        mode: \"percent\",\n                        width: 0,\n                    });\n                    return size;\n                })();\n        this._lifeCount = this.options.life.count ?? -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return getSize(this.size, container.canvas.size);\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= (this._spawnDelay ?? 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this._prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n    }\n    update(delta) {\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = this._spawnDelay ?? 0;\n            this._currentEmitDelay = this._emitDelay ?? 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this._emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this._calcPosition();\n                    this._spawnDelay =\n                        (getRangeValue(this.options.life.delay ?? 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this._destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this._emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n}\n","import { arrayRandomIndex, executeOnSingleOrMultiple, isArray, isNumber, itemFromArray, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode !== \"emitter\") {\n            return;\n        }\n        let emittersModeOptions;\n        if (modeEmitters && isArray(modeEmitters.value)) {\n            if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                emittersModeOptions = [];\n                const usedIndexes = [];\n                for (let i = 0; i < modeEmitters.random.count; i++) {\n                    const idx = arrayRandomIndex(modeEmitters.value);\n                    if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                        i--;\n                        continue;\n                    }\n                    usedIndexes.push(idx);\n                    emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters.value;\n            }\n        }\n        else {\n            emittersModeOptions = modeEmitters?.value;\n        }\n        const emittersOptions = emittersModeOptions ?? emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n        executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n            this.addEmitter(emitter, ePosition);\n        });\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (!this.emitters) {\n            return;\n        }\n        if (isArray(this.emitters)) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n","const shapes = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(getRandom() * 4), v = (getRandom() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, (emitter) => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = source?.interactivity?.modes?.emitters;\n        if (interactivityEmitters) {\n            if (isArray(interactivityEmitters)) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (isArray(emitterMode.value)) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? 1,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? 1,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((isArray(emitters) && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!options.interactivity?.events?.onClick?.mode &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine, refresh = true) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            engine.emitterShapeManager?.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","import { deepExtend } from \"tsparticles-engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Trail } from \"./Options/Classes/Trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(delta) {\n        const container = this.container, { interactivity } = container;\n        if (!container.retina.reduceFactor) {\n            return;\n        }\n        const options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        const canEmit = !(trailOptions.pauseOnStop &&\n            (interactivity.mouse.position === this._lastPosition ||\n                (interactivity.mouse.position?.x === this._lastPosition?.x &&\n                    interactivity.mouse.position?.y === this._lastPosition?.y)));\n        const mousePos = container.interactivity.mouse.position;\n        if (mousePos) {\n            this._lastPosition = { ...mousePos };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source?.trail);\n        }\n    }\n    reset() {\n    }\n}\n","import { TrailMaker } from \"./TrailMaker\";\nexport async function loadExternalTrailInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalTrail\", (container) => new TrailMaker(container), refresh);\n}\nexport * from \"./Options/Classes/Trail\";\nexport * from \"./Options/Interfaces/ITrail\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nimport { RollLight } from \"./RollLight\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = \"vertical\";\n        this.speed = 25;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n","import { initParticle, updateRoll } from \"./Utils\";\nimport { Roll } from \"./Options/Classes/Roll\";\nexport class RollUpdater {\n    getTransformValues(particle) {\n        const roll = particle.roll?.enable && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        initParticle(particle);\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!roll?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source?.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n","import { getRandom, getRangeValue, rangeColorToHsl } from \"tsparticles-engine\";\nexport function initParticle(particle) {\n    const rollOpt = particle.options.roll;\n    if (!rollOpt?.enable) {\n        particle.roll = {\n            enable: false,\n            horizontal: false,\n            vertical: false,\n            angle: 0,\n            speed: 0,\n        };\n        return;\n    }\n    particle.roll = {\n        enable: rollOpt.enable,\n        horizontal: rollOpt.mode === \"horizontal\" || rollOpt.mode === \"both\",\n        vertical: rollOpt.mode === \"vertical\" || rollOpt.mode === \"both\",\n        angle: getRandom() * Math.PI * 2,\n        speed: getRangeValue(rollOpt.speed) / 360,\n    };\n    if (rollOpt.backColor) {\n        particle.backColor = rangeColorToHsl(rollOpt.backColor);\n    }\n    else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n        const alterType = getRandom() >= 0.5 ? \"darken\" : \"enlighten\";\n        particle.roll.alter = {\n            type: alterType,\n            value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n        };\n    }\n    else if (rollOpt.darken.enable) {\n        particle.roll.alter = {\n            type: \"darken\",\n            value: getRangeValue(rollOpt.darken.value),\n        };\n    }\n    else if (rollOpt.enlighten.enable) {\n        particle.roll.alter = {\n            type: \"enlighten\",\n            value: getRangeValue(rollOpt.enlighten.value),\n        };\n    }\n}\nexport function updateRoll(particle, delta) {\n    const roll = particle.options.roll, data = particle.roll;\n    if (!data || !roll?.enable) {\n        return;\n    }\n    const speed = data.speed * delta.factor, max = 2 * Math.PI;\n    data.angle += speed;\n    if (data.angle > max) {\n        data.angle -= max;\n    }\n}\n","import { RollUpdater } from \"./RollUpdater\";\nexport async function loadRollUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"roll\", () => new RollUpdater(), refresh);\n}\n","import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nimport { TiltAnimation } from \"./TiltAnimation\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = \"clockwise\";\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nimport { updateTilt } from \"./Utils\";\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        const tilt = particle.tilt?.enable && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: getRandom() >= 0.5 ? 1 : -1,\n            cosDirection: getRandom() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.tilt.status = \"increasing\";\n                break;\n        }\n        const tiltAnimation = particle.options.tilt?.animation;\n        if (tiltAnimation?.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tiltAnimation = particle.options.tilt?.animation;\n        return !particle.destroyed && !particle.spawning && !!tiltAnimation?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source?.tilt);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n","export function updateTilt(particle, delta) {\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = (particle.tilt.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = particle.tilt.decay ?? 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case \"increasing\":\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\n","import { TiltUpdater } from \"./TiltUpdater\";\nexport async function loadTiltUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"tilt\", (container) => new TiltUpdater(container), refresh);\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { TwinkleValues } from \"./TwinkleValues\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n","import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle\";\nexport class TwinkleUpdater {\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source?.twinkle);\n        }\n    }\n    update() {\n    }\n}\n","import { TwinkleUpdater } from \"./TwinkleUpdater\";\nexport async function loadTwinkleUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"twinkle\", () => new TwinkleUpdater(), refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n","import { isNumber, setRangeValue, } from \"tsparticles-engine\";\nimport { WobbleSpeed } from \"./WobbleSpeed\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (isNumber(data.speed)) {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nimport { updateWobble } from \"./Utils\";\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt?.enable) {\n            particle.wobble = {\n                angle: getRandom() * Math.PI * 2,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue(wobbleOpt?.distance ?? 0) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning && !!particle.options.wobble?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source?.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n","export function updateWobble(particle, delta) {\n    const { wobble: wobbleOptions } = particle.options, { wobble } = particle;\n    if (!wobbleOptions?.enable || !wobble) {\n        return;\n    }\n    const angleSpeed = wobble.angleSpeed * delta.factor, moveSpeed = wobble.moveSpeed * delta.factor, distance = (moveSpeed * ((particle.retina.wobbleDistance ?? 0) * delta.factor)) / (1000 / 60), max = 2 * Math.PI, { position } = particle;\n    wobble.angle += angleSpeed;\n    if (wobble.angle > max) {\n        wobble.angle -= max;\n    }\n    position.x += distance * Math.cos(wobble.angle);\n    position.y += distance * Math.abs(Math.sin(wobble.angle));\n}\n","import { WobbleUpdater } from \"./WobbleUpdater\";\nexport async function loadWobbleUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"wobble\", (container) => new WobbleUpdater(container), refresh);\n}\n","import { loadAbsorbersPlugin } from \"tsparticles-plugin-absorbers\";\nimport { loadDestroyUpdater } from \"tsparticles-updater-destroy\";\nimport { loadEmittersPlugin } from \"tsparticles-plugin-emitters\";\nimport { loadExternalTrailInteraction } from \"tsparticles-interaction-external-trail\";\nimport { loadRollUpdater } from \"tsparticles-updater-roll\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { loadTiltUpdater } from \"tsparticles-updater-tilt\";\nimport { loadTwinkleUpdater } from \"tsparticles-updater-twinkle\";\nimport { loadWobbleUpdater } from \"tsparticles-updater-wobble\";\nexport async function loadFull(engine, refresh = true) {\n    await loadDestroyUpdater(engine, false);\n    await loadRollUpdater(engine, false);\n    await loadTiltUpdater(engine, false);\n    await loadTwinkleUpdater(engine, false);\n    await loadWobbleUpdater(engine, false);\n    await loadExternalTrailInteraction(engine, false);\n    await loadAbsorbersPlugin(engine, false);\n    await loadEmittersPlugin(engine, false);\n    await loadSlim(engine, refresh);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["isObject","val","deepCompare","obj1","obj2","excludeKeyFn","arguments","length","undefined","keys1","Object","keys","filter","key","keys2","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","value1","value2","Array","isArray","deepCompareArrays","err","e","f","arr1","arr2","i","val1","val2","defaultId","Particles","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","init","library","_createClass","this","destroy","setState","nextProps","_nextProps$options","_this$props$options","nextOptions","options","params","currentOptions","url","id","canvasClassName","className","height","width","style","loaded","startsWith","refresh","_this2","then","_get","_getPrototypeOf","prototype","_this3","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","tsParticles","_callee","_context","loadParticles","stop","_this$props","React","_objectSpread","_refresh","_callee3","_context3","apply","_loadParticles","_callee4","_ref3","_this$props$id","_this$props$options2","container","_context4","abrupt","defaultProps","sent","current","Component","Circle","_Range","x","y","radius","point","getDistance","position","range","pos1","pos2","distPos","Math","abs","r","sqrt","pow","Rectangle","_range$size","size","Range","generatedAttribute","mouseDownEvent","mouseUpEvent","mouseLeaveEvent","mouseOutEvent","mouseMoveEvent","touchStartEvent","touchEndEvent","touchMoveEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","errorPrefix","w","h","pos","intersects","size2","w2","h2","Vector","_Vector3d","xOrCoords","get","create","source","Vector3d","z","_updateFromAngle","angle","cos","sin","isNumber","coords3d","Error","concat","atan2","set","getLengthSq","v","clone","sub","multTo","c","v3d","ColorAnimation","count","enable","offset","speed","delay","decay","sync","data","setRangeValue","HslAnimation","l","load","AnimatableColor","_OptionsColor","animation","colorAnimation","color","isString","OptionsColor","Random","minimumValue","ValueWithRandom","random","isBoolean","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","drawTriangle","p1","p2","p3","paintBase","dimension","baseColor","fillStyle","fillRect","paintImage","image","opacity","globalAlpha","drawImage","clear","clearRect","drawParticle","_transform$a","_transform$b","_transform$c","_transform$d","_particle$strokeWidth","particle","delta","colorStyles","backgroundMask","composite","shadow","transform","getPosition","rotation","pathRotation","velocity","rotateData","transformData","a","b","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","getStyleFromRgb","shadowOffsetX","shadowOffsetY","fill","strokeWidth","lineWidth","stroke","strokeStyle","shape","drawer","drawers","draw","retina","pixelRatio","drawShape","close","afterEffect","drawShapeAfterEffect","drawPlugin","plugin","drawParticlePlugin","alterHsl","type","randomColorValue","midColorValue","colorManagers","Map","addColorManager","manager","hue2rgb","p","q","t","stringToRgba","input","_slicedToArray","stringPrefix","parseString","hexFixed","replace","_","g","result","exec","parseInt","rangeColorToRgb","index","useIndex","colorToRgb","itemFromArray","_step2","_iterator2","res","handleRangeColor","getRandomRgbColor","stringToRgb","_step3","_iterator3","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","max","min","hslToRgb","hsl","hslPercent","floor","hslaToRgba","hsla","rgbResult","fixedMin","randomInRange","getStyleFromHsl","colorMix","color1","color2","size1","rgb1","rgb2","mix","getLinkColor","linkColor","_p1$getFillColor","_p2$getFillColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","setColorAnimation","colorValue","getRangeValue","status","loops","maxLoops","time","delayTime","getRandom","initialValue","_random","easings","addEasing","name","easing","getEasing","clamp","num","comp1","comp2","weight1","weight2","getRangeMax","getRangeMin","getValue","_ref","getDistances","pointA","pointB","dx","dy","distance","getParticleDirectionAngle","direction","center","PI","getParticleBaseVelocity","baseVelocity","collisionVelocity","v1","v2","m1","m2","calcPositionOrRandomFromSize","_data$position$x","_data$position","_data$position$y","_data$position2","calcPositionOrRandomFromSizeRanged","_data$position3","_data$position4","calcExactPositionOrRandomFromSize","_data$position$x2","_data$position5","_data$position$y2","_data$position6","parseAlpha","endsWith","parseFloat","CollisionsAbsorb","CollisionsOverlap","retries","ParticlesBounceFactor","_ValueWithRandom","ParticlesBounce","horizontal","vertical","Collisions","absorb","bounce","maxSpeed","mode","overlap","MoveAngle","MoveAttract","rotate","_data$rotate$x","_data$rotate","_data$rotate$y","_data$rotate2","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","deepExtend","MoveTrailFill","MoveTrail","fillColor","OutModes","default","_data$bottom","_data$left","_data$right","_data$top","bottom","left","right","top","Spin","Move","attract","drift","gravity","path","outModes","spin","straight","trail","vibrate","warp","collisions","outMode","_data$outModes","_data$path","out_mode","noise","RangedAnimationOptions","_AnimationOptions","startValue","AnimationOptions","OpacityAnimation","_RangedAnimationOptio","opacity_min","Opacity","_data$animation","anim","ParticlesDensity","area","_data$width","_data$height","value_area","factor","ParticlesNumber","density","limit","_data$limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","loadShape","item","mainKey","altKey","altOverride","_this$options$mainKey","_this$options$altKey","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","_this$options$charKey","_this$options$imageKe","_this$options$polygon","_value","_data$options","_data$image","custom","_this$options$shape","character","polygon","images","SizeAnimation","size_min","Size","Stroke","ZIndex","opacityRate","sizeRate","velocityRate","ParticlesOptions","engine","_engine","_container","groups","move","number","reduceDuplicates","zIndex","_data$move$collisions","_data$move","_data$move2","_data$stroke","_data$shape","group","_this$groups$group","interactivity","strokeToLoad","executeOnSingleOrMultiple","tmp","updaters","plugins","updater","loadOptions","interactors","interactor","loadParticlesOptions","_len","sourceOptionsArr","_key","_i","_sourceOptionsArr","sourceOptions","_len2","_key2","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","bounced","pSide","pOtherSide","rectSide","rectOtherSide","isSsr","window","document","safeMatchMedia","query","matchMedia","safeMutationObserver","callback","MutationObserver","isInArray","array","indexOf","loadFont","_x","_x2","_loadFont","font","weight","fonts","t0","arrayRandomIndex","isPointInside","bounds","inside","areBoundsInside","calculateBounds","destination","sources","_sources","sourceIsArray","_loop","destDict","map","isDivModeEnabled","divs","findItemFromSingleOrMultiple","divModeExecute","div","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","mass","getMass","circleBounce","_p1$velocity$sub","xVelocityDiff","yVelocityDiff","_getDistances","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","divBounds","resH","resV","obj","itemFromSingleOrMultiple","find","initParticleNumericAnimationValue","pxRatio","valueRange","autoStatus","getPositionOrSize","positionOrSize","canvasSize","excluded","target","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_objectWithoutProperties","_excluded","getSize","arg","isFunction","setTransformValue","newFactor","_factor$key","newValue","Canvas","_applyPostDrawUpdaters","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","ctx","zOpacity","_preDrawUpdaters","getColorStyles","_updater$getColorStyl","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_step4","_iterator4","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","actualOptions","coverRgb","coverColor","_coverColorStyle","_initStyle","_fullScreen","_originalStyle","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","trailFill","_trail","particles","_trailFill","Promise","resolve","reject","img","createElement","addEventListener","evt","src","_paintBase","_paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","_mutationObserver","priority","fullScreen","toString","_generated","paint","remove","cb","_particle$getStrokeCo","spawning","destroyed","pfColor","psColor","_this$_getPluginParti","_this$_getPluginParti2","_ref2","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zOpacityFactor","zIndexFactor","bubble","zStrokeOpacity","strokeOpacity","_init","_this4","obs","records","_step5","_iterator5","record","attributeName","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","_step6","_iterator6","push","_step7","_iterator7","canvas","_this5","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","_this6","newSize","oldSize","started","resizeFactor","_this7","_windowResize","needsRefresh","updateActualOptions","setDensity","manageListener","event","handler","add","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","windowResize","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lastTouch","touches","_touchEnd","_touches","from","changedTouches","touch","delete","identifier","_touchEndClick","_i2","_touches2","_touchStart","_i3","_touches3","performance","now","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","elementId","ids","_data$ids","el","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","_data$onClick","_data$onDiv","_data$onHover","onclick","ondiv","onhover","Modes","loadModeOptions","Interactivity","modes","_data$detectsOn","detect_on","ManualParticle","_data$position$mode","Responsive","maxWidth","Infinity","ThemeDefault","Theme","Options","_findDefaultTheme","_this$themes$find","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","_data$detectRetina","_data$fpsLimit","_data$fullScreen","_this$_findDefaultThe","_this$_findDefaultThe2","retina_detect","fps_limit","backgroundMode","optResponsive","sort","existingTheme","optTheme","defaultOptions","responsiveOptions","screen","availWidth","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","_externalInteract","isEnabled","interact","t1","finish","_particlesInteract","_interactor","_x3","_reset","_interactor2","reset","_x4","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","overrideOptions","_calcPosition","_outModes$left","_outModes$right","_outModes$top","_outModes$bottom","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","copy","moveOptions","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","backSum","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","initialPosition","moveCenter","outType","_loadShapeData","shapeOptions","shapeData","override","unbreakable","inRange","slow","pathGenerator","particleDestroyed","_this$bubble$color","_this$bubble$radius","_this$bubble$color2","strokeColor","_shapeData$fill","_shapeData$close","_drawer","lastPathTime","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","overrideShapeType","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","movers","mover","particleInit","particleCreated","isInsideCanvas","_step8","_iterator8","Point","QuadTree","rectangle","capacity","_subdivide","_this$rectangle$posit","_this$rectangle$size","_subs","round","_divided","_points","contains","insert","check","found","qTreeRectangle","_applyDensity","manualCount","_options$number$densi","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","removeQuantity","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","_removeParticle","zIdx","splice","_interactionManager","quadTree","getMovers","getUpdaters","addParticle","countToRemove","_draw","_step2$value","update","condition","particlesInitialization","pathGenerators","addManualParticles","groupOptions","j","_groupOptions$number","nb","pushing","_redraw","removeAt","quantity","deleted","_update","particlesToDelete","_step6$value","_step7$value","_iterator10","_step10","_step10$value","_plugin","_iterator11","_step11","_this$pool","checkDelete","_iterator9","_step9","_particle","_iterator12","_step12","zArray","Set","particleUpdate","has","_toConsumableArray","externalInteract","particlesInteract","t2","Retina","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","moveDrift","moveSpeed","guardCheck","initDelta","loadContainerOptions","defaultPathGenerator","generate","Container","_intersectionManager","entry","isIntersecting","_nextFrame","timestamp","_this$lastFrameTime","lastFrameTime","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","clickOrTouchHandler","posRetina","queryCircle","touched","touchMoved","radiusX","radiusY","mainArr","dom","idx","findIndex","refreshTime","_drawAnimationFrame","requestAnimationFrame","_export2","_step4$value","_args3","export","supported","blob","shapes","availablePlugins","_step8$value","_step9$value","_plugin2","getSupportedShapes","getAvailablePlugins","t3","particlesSetup","_loadTheme","_callee5","_context5","_currentTheme","cancelAnimationFrame","needsUpdate","_callee6","_context6","start","_callee7","_context7","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_start","_callee9","_context9","_delayTimeout","_callee8","_iterator13","_step13","_step13$value","_context8","addListeners","HTMLElement","removeListeners","_step14","_iterator14","_step15","_iterator15","newMaxWidth","setResponsive","setTheme","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","forEach","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","initInteractor","initMover","initUpdater","getPlugin","presetKey","types","needsPlugin","getDataFromUrl","_getDataFromUrl","_callee15","response","_context15","fallback","fetch","ok","json","isParams","Engine","_configs","_domArray","_eventDispatcher","_initialized","_step$value","config","nameOrConfig","_nameOrConfig$name","_addInteractor","interactorInitializer","_args","addInteractor","_addMover","moverInitializer","_args2","addParticleMover","_x5","_addParticleUpdater","updaterInitializer","addParticleUpdater","_x6","_x7","_addPathGenerator","_args4","addPathGenerator","_x8","_x9","_addPlugin","_args5","addPlugin","_x10","_addPreset","_args6","addPreset","_x11","_x12","_addShape","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realRefresh","realInit","realAfterEffect","realDestroy","_args7","addShapeDrawer","_x13","_x14","_x15","_x16","_x17","_load","tagIdOrOptionsOrParams","loadFromArray","_x18","_x19","_loadFromArray","optionsOrIndex","_loadParams","_x20","_x21","_x22","_loadJSON","_callee10","tagId","pathConfigJson","_context10","_x23","_x24","_x25","_refresh2","_callee11","_args11","_context11","_set","_callee12","_context12","_x26","_x27","_x28","_x29","_setJSON","_callee13","_context13","_x30","_x31","_x32","_x33","addClickHandler","_loadParams2","_callee14","_params$id","_params$element","domContainer","oldIndex","old","existingCanvases","newItem","_context14","getElementById","body","append","domItem","tagName","toLowerCase","getElementsByTagName","appendChild","loadCanvas","_x34","HslColorManager","_colorValue$hsl","_colorValue$hsl2","RgbColorManager","_colorValue$rgb","rgbColor","_colorValue$rgb2","rgbColorManager","hslColorManager","AbsorberSizeLimit","AbsorberSize","Absorber","draggable","orbits","AbsorberInstance","absorbers","_rangeColorToRgb","_this$initialPosition","_this$initialPosition2","_updateParticlePosition","needsNewPosition","newPosition","setTo","absorberOrbit","_particle$retina$move","minSize","absorberOrbitDirection","orbitRadius","orbitAngle","orbitDirection","updateFunc","addV","addTo","dragging","sizeFactor","translate","arc","Absorbers","interactivityAbsorbers","getAbsorber","idxOrName","addAbsorber","absorber","absorberOptions","modeAbsorbers","absorbersModeOptions","absorbersOptions","aPosition","AbsorbersPlugin","_source$interactivity","_source$interactivity2","_options$interactivit","_options$interactivit2","_options$interactivit3","loadAbsorbersPlugin","_loadAbsorbersPlugin","DestroyBounds","SplitFactor","SplitRate","Split","rate","sizeOffset","_this$colorOffset","colorOffset","Destroy","split","addSplitParticle","parent","splitParticlesOptions","destroyOptions","splitOptions","parentColor","_splitOptions$colorOf","_splitOptions$colorOf2","_splitOptions$colorOf3","_parent$splitCount","splitCount","DestroyUpdater","destroyBoundsOptions","destroyBounds","particlesSplitOptions","loadDestroyUpdater","_loadDestroyUpdater","CircleShape","theta","randomTheta","u","atan","tan","generateTheta","maxRadius","randomRadius","EmitterLife","wait","EmitterRate","EmitterSize","Emitter","life","startCount","domId","spawnColor","EmitterInstance","emitters","_this$options$life$de","_this$_initialPositio","_this$_engine$emitter","_particlesOptions2","_particlesOptions3","_particlesOptions3$mo","_particlesOptions$mov","_particlesOptions$mov2","_this$options$size","_this$options$life$co","_destroy","removeEmitter","emitter","_emit","_emitParticles","singleParticlesOptions","_particlesOptions","_this$_shape$randomPo","_this$_shape","_this$options$spawnCo","hslAnimation","_setColorAnimation","pPosition","_shape","randomPosition","_prepareToDie","_this$options$life","_lifeCount","_immortal","initValue","maxValue","_animation$speed","emitFactor","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","_spawnDelay","emitterShapeManager","getShape","_firstSpawn","_startParticlesAdded","elRect","_emitDelay","_this$_spawnDelay","_this$_spawnDelay2","_this$_emitDelay","_this$options$life$de2","Emitters","interactivityEmitters","getEmitter","addEmitter","playEmitter","externalPlay","pauseEmitter","externalPause","emitterOptions","_emittersModeOptions","modeEmitters","emittersModeOptions","usedIndexes","includes","emittersOptions","ePosition","ShapeManager","randomSquareCoordinate","SquareShape","halfW","halfH","side","EmittersPlugin","emitterMode","_emitterMode$random$c","_emitterMode$random$e","_emitterMode$random$c2","_emitterMode$random$e2","loadEmittersPlugin","_loadEmittersPlugin","addEmitterShape","_engine$emitterShapeM","addShape","ExternalInteractorBase","Trail","pauseOnStop","TrailMaker","_ExternalInteractorBa","_interact","_interactivity$mouse$","_this$_lastPosition","_interactivity$mouse$2","_this$_lastPosition2","trailOptions","optDelay","canEmit","_lastPosition","_particle$interactivi","loadExternalTrailInteraction","_loadExternalTrailInteraction","RollLight","Roll","darken","enlighten","RollUpdater","_particle$roll","rollHorizontal","rollVertical","rollOpt","alterType","updateRoll","loadRollUpdater","_loadRollUpdater","_options$color","_options$minDistance","_options$connectParti","_options$speed","_options$maxParticles","_options$sizeVariatio","_options$responsive","querySelector","links","minDistance","connectParticles","maxParticles","sizeVariations","_responsive$options","_responsive$options2","_responsive$options3","_responsive$options4","_responsive$options5","breakpoint","initPjs","_initParticlesJS","particlesJS","loadJSON","catch","setOnClickHandler","pJSDom","initParticlesJS","_particle$pathGenerat","applyPath","gravityOptions","gravityFactor","mult","zVelocityFactor","BaseMover","_initSpin","_spinOptions$position","spinOptions","spinPos","spinCenter","spinAcceleration","_particle$retina","_particle$retina2","_particle$retina2$mov","_particle$retina$maxS","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","maxCanvasSize","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","loadBaseMover","_loadBaseMover","addMover","CircleDrawer","circleRange","_shapeData$angle","loadCircleShape","_loadCircleShape","updateColorValue","valueAnimation","decrease","_colorValue$maxLoops","_colorValue$loops","_colorValue$maxLoops2","_colorValue$delayTime","_colorValue$delayTime2","_colorValue$delayTime3","_colorValue$delayTime4","_colorValue$velocity","_colorValue$decay","ColorUpdater","_particle$options$col","hAnimation","sAnimation","lAnimation","updateColor","loadColorUpdater","_loadColorUpdater","OpacityUpdater","opacityOptions","opacityAnimation","_particle$opacity$max","_particle$opacity$max2","_particle$opacity$loo","_particle$opacity$max3","_data$maxLoops","_data$loops","_data$maxLoops2","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","minValue","_data$velocity","_data$velocity2","checkDestroy","updateOpacity","loadOpacityUpdater","_loadOpacityUpdater","BounceOutMode","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","_particle$velocity","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","_getDistances2","newDx","newDy","_getDistances3","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_updateOutMode","loadOutModesUpdater","_loadOutModesUpdater","SizeUpdater","_particle$retina$size","sizeAnimation","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","sizeVelocity","updateSize","loadSizeUpdater","_loadSizeUpdater","loadBasic","_loadBasic","loadEasingQuadPlugin","_loadEasingQuadPlugin","Attract","Attractor","_clickAttract","attractRadius","attractModeDistance","_processAttract","_hoverAttract","attractOptions","attractFactor","normVec","subFrom","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","loadExternalAttractInteraction","_loadExternalAttractInteraction","Bounce","Bouncer","_processBounce","_processMouseBounce","tolerance","bounceModeDistance","_singleSelectorBounce","querySelectorAll","elem","offsetLeft","offsetTop","loadExternalBounceInteraction","_loadExternalBounceInteraction","BubbleBase","BubbleDiv","_BubbleBase","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","_particle$opacity$val","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","_divBubble$opacity","_particle$opacity$val2","_particle$opacity2","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","loadExternalBubbleInteraction","_loadExternalBubbleInteraction","ConnectLinks","Connect","_data$links","lineLinked","line_linked","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","_p1$retina$linksWidth","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","distMax","xDiff","yDiff","slice","loadExternalConnectInteraction","_loadExternalConnectInteraction","GrabLinks","Grab","drawGrab","lineColor","_particle$retina$link","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","_grabLineOptions$colo","_particle$options$lin","grabLineOptions","lineOpacity","opacityLine","linksOptions","grabLineColor","loadExternalGrabInteraction","_loadExternalGrabInteraction","Pauser","loadExternalPauseInteraction","_loadExternalPauseInteraction","Push","_data$quantity","particles_nb","Pusher","pushOptions","loadExternalPushInteraction","_loadExternalPushInteraction","Remove","Remover","removeNb","loadExternalRemoveInteraction","_loadExternalRemoveInteraction","RepulseBase","RepulseDiv","_RepulseBase","Repulse","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","_divRepulse$speed","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","loadExternalRepulseInteraction","_loadExternalRepulseInteraction","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","loadExternalSlowInteraction","_loadExternalSlowInteraction","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","reduce","acc","curr","String","fromCharCode","blockString","len","blockData","Uint8Array","parseColorTable","byteStream","colors","parseExtensionBlock","_parseExtensionBlock","gif","getFrameIndex","getTransparencyIndex","frame","packedByte","transparencyFlag","transparencyIndex","applicationExtension","nextByte","frames","GCreserved","disposalMethod","userInputDelayFlag","nextTwoBytes","getString","authenticationCode","readSubBlocksBin","applicationExtensions","comments","readSubBlocks","globalColorTable","EvalError","plainTextData","charSize","foregroundColor","text","skipSubBlocks","parseImageBlock","_parseImageBlock","avgAlpha","progressCallback","localColorTableFlag","interlacedFlag","localColorCount","getColor","minCodeSize","imageData","clearCode","readBits","code","dic","pass","pixelPos","lineIndex","last","_getColor","_code","_size","_pos","_dic","_pixelPos","_last","_getColor2","_r","_g","_b","_a","sortFlag","reserved","localColorTable","_index","ImageData","colorSpace","DOMException","bytePos","bitPos","createImageBitmap","bitmap","parseBlock","_parseBlock","getGIFLoopAmount","extension","NaN","decodeGIF","_decodeGIF","gifURL","buffer","globalColorTableFlag","globalColorCount","backgroundColorIndex","_gif$globalColorTable","frameIndex","incrementFrameIndex","getframeIndex","_frame","arrayBuffer","totalTime","colorRes","pixelAspectRatio","copyWithin","increment","message","currentColorRegex","loadImage","_loadImage","loading","Image","loadGifImage","_loadGifImage","_getGIFLoopAmount","gifData","gifLoopCount","downloadSvgImage","_downloadSvgImage","svgData","replaceImageColor","_imageData$replaceCol","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","loadImageShape","_imageShape$replaceCo","_particle$gifFrame","_image$gifLoopCount","offscreenCanvas","OffscreenCanvas","offscreenContext","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","putImageData","previousImageData","getImageData","preload","_imageData$fill","_imageData$close","_image$ratio","Preload","ImagePreloaderPlugin","preloadOptions","existing","addLoadImageToEngine","_data$gif","_data$name","imageFunc","_data$name2","_loadImageShape","preloader","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","justSpawned","widthRange","heightRange","loadLifeUpdater","_loadLifeUpdater","LineDrawer","_shapeData$cap","lineCap","cap","loadLineShape","_loadLineShape","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","loadParallaxMover","_loadParallaxMover","ParticlesInteractorBase","_ParticlesInteractorB","_p1$retina$attractDis","ax","ay","p1Factor","p2Factor","loadParticlesAttractInteraction","_loadParticlesAttractInteraction","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","loadParticlesCollisionsInteraction","_loadParticlesCollisionsInteraction","CircleWarp","_Circle","_this$canvasSize","rect","circle","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","linkContainer","linksColor","linksColors","_p1$retina$linksDista","linkOpt1","linksDistance","linkOpt2","delegateYield","_source$links","loadLinksInteraction","_loadLinksInteraction","setLinkFrequency","dictionary","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","_p1$options$twinkle","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkLine","_drawLinkTriangle","link1","link2","_triangleOptions$opac","triangleOptions","opacityTriangle","_p1$retina$linksDista2","pos3","colorTriangle","drawLinkTriangle","_drawTriangles","p1Links","_options$links","_p2$options$links","_p2$links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","loadLinksPlugin","_loadLinksPlugin","loadParticlesLinksInteraction","_loadParticlesLinksInteraction","PolygonDrawerBase","getCenter","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","_polygon$sides","nb_sides","PolygonDrawer","_PolygonDrawerBase","TriangleDrawer","loadGenericPolygonShape","_loadGenericPolygonShape","loadTriangleShape","_loadTriangleShape","loadPolygonShape","_loadPolygonShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","_particle$rotate$valu","_particle$rotate","_rotate$velocity","_rotate$decay","updateRotate","loadRotateUpdater","_loadRotateUpdater","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","loadSquareShape","_loadSquareShape","StarDrawer","_particle$starInset","inset","starInset","_star$sides","star","_star$inset","loadStarShape","_loadStarShape","StrokeColorUpdater","_stroke$opacity","_stroke$color","_rangeColorToHsl","strokeAnimation","strokeHslColor","_particle$strokeColor","_particle$strokeAnima","updateStrokeColor","loadStrokeColorUpdater","_loadStrokeColorUpdater","validTypes","TextDrawer","_character$style","_character$weight","_character$font","textData","randomIndexData","fillText","strokeText","promises","all","loadTextShape","_loadTextShape","loadSlim","_loadSlim","TiltAnimation","Tilt","TiltUpdater","_particle$tilt","tilt","cosDirection","sinDirection","_particle$options$til","tiltOptions","tiltDirection","tiltAnimation","_particle$options$til2","_particle$tilt$veloci","_particle$tilt$decay","updateTilt","loadTiltUpdater","_loadTiltUpdater","TwinkleValues","Twinkle","TwinkleUpdater","twinkleOptions","twinkling","twinklingOpacity","twinkleStyle","needsTwinkle","loadTwinkleUpdater","_loadTwinkleUpdater","WobbleSpeed","Wobble","rangeSpeed","WobbleUpdater","_wobbleOpt$distance","wobbleOpt","wobble","angleSpeed","wobbleDistance","_particle$options$wob","_particle$retina$wobb","wobbleOptions","updateWobble","loadWobbleUpdater","_loadWobbleUpdater","loadFull","_loadFull","asyncGeneratorStep","gen","_next","_throw","fn","self","o","allowArrayLike","it","Symbol","iterator","F","_e","TypeError","normalCompletion","didErr","step","_e2","Reflect","bind","property","receiver","base","object","hasOwnProperty","getPrototypeOf","desc","getOwnPropertyDescriptor","_defineProperty","toPropertyKey","defineProperty","enumerable","configurable","writable","ownKeys","enumerableOnly","symbols","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","arrayLikeToArray","iter","unsupportedIterableToArray"],"sourceRoot":""}